Index: app/src/main/java/com/example/pokemonquiz/Controller/QuizActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pokemonquiz.Controller;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.os.Bundle;\nimport android.os.CountDownTimer;\nimport android.util.Pair;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.lifecycle.Observer;\nimport androidx.lifecycle.ViewModelProviders;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.example.pokemonquiz.DataAccess.Pokemon;\nimport com.example.pokemonquiz.R;\nimport com.example.pokemonquiz.ViewModel.PokemonAdapter;\nimport com.example.pokemonquiz.ViewModel.PokemonViewModel;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class QuizActivity extends AppCompatActivity {\n\n    public boolean choice = false;\n    public CountDownTimer timer;\n    public int score = 0;\n    public int answered = 0;\n\n    private PokemonViewModel pokemonViewModel;\n    public List<Pokemon> questions;\n\n    private ImageView imageView;\n\n    private Button btn1;\n    private Button btn2;\n    private Button btn3;\n    private Button btnExit;\n    public ProgressBar simpleProgressBar;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_quiz_activity);\n\n\n        pokemonViewModel = ViewModelProviders.of(this).get(PokemonViewModel.class);\n        PokemonAdapter adapter = new PokemonAdapter();\n\n        pokemonViewModel.getAll().observe(this, new Observer<List<Pokemon>>() {\n            @Override\n            public void onChanged(List<Pokemon> pokemons) {\n\n                adapter.setPokemonList(pokemons);\n\n                // Fetch questions\n                questions = pokemons;\n\n\n                //DETTE FUNKER IKKE\n                //Bundle values = getIntent().getBundleExtra(\"choice\");\n                //choice = values.getBoolean(\"choice\",false);\n\n\n\n                //    Pokemon p =  pokemonViewModel.getStandardPokemonList().get(0);\n\n                //Shuffle the questions to preserve randomness\n                Collections.shuffle(questions);\n                System.out.println(\"SHUFFLED\");\n\n\n\n                // Setup imageView and buttons\n                imageView = findViewById(R.id.imageView);\n\n                btn1 = findViewById(R.id.btn1);\n                btn2 = findViewById(R.id.btn2);\n                btn3 = findViewById(R.id.btn3);\n\n                displayNextQuestion();\n            }\n        });\n\n    }\n\n\n    @SuppressLint(\"SetTextI18n\")\n\n    private void displayNextQuestion() {\n        simpleProgressBar=(ProgressBar) findViewById(R.id.simpleProgressBar); // initiate the progress bar\n        TextView scoreBoard = findViewById(R.id.scoreBoard);\n        TextView feedback = findViewById(R.id.feedback);\n        scoreBoard.setText(\"Score: \" + score + \"/\" + answered);\n        if(choice) {\n            simpleProgressBar.setMax(10);\n\n            timer = new CountDownTimer(10000, 1000) {\n\n                public void onTick(long millisUntilFinished) {\n                    simpleProgressBar.setProgress((int) (millisUntilFinished / 1000));\n                }\n\n                public void onFinish() {\n                    answered++;\n                    if (answered == questions.size()) {\n                        returnToMainMenu();\n                    } else {\n                        displayNextQuestion();\n                    }\n                }\n            }.start();\n        }\n        else{\n            simpleProgressBar.setMax(questions.size());\n        }\n        simpleProgressBar.setProgress(score);\n        // Set the imageView to be the first element in the question array\n        imageView.setImageBitmap(questions.get(answered).getImage());\n\n        // The correct answer\n        String correctAnswer = questions.get(answered).getName();\n        System.out.println(\"Question order: 1: \" + questions.get(0).getName() + \", 2: \" + questions.get(1).getName() + \", 3:\" + questions.get(2).getName());\n        System.out.println(\"Current question: (\" + (answered+1) + \") \" + questions.get(answered).getName());\n        System.out.println(\"Current answer: \" + correctAnswer);\n\n        // Get two wrong answers at random\n        ArrayList<String> wrongAnswers = new ArrayList<>();\n\n        ArrayList<Pokemon> shuffled = new ArrayList<>(questions);\n        Collections.shuffle(shuffled);\n\n        for ( Pokemon p : shuffled) {\n            if (!p.getName().equals(correctAnswer)) {\n                wrongAnswers.add(p.getName());\n                if (wrongAnswers.size() == 2) break;\n            }\n        }\n\n        // Store buttons in arraylist and shuffle\n        ArrayList<Button> buttons = new ArrayList<>( Arrays.asList(btn1, btn2, btn3));\n        Collections.shuffle(buttons);\n\n        // Set the correct answer button\n        buttons.get(0).setText(correctAnswer);\n        buttons.get(0).setOnClickListener(view -> {\n            score++;\n            answered++;\n            if(answered==questions.size()){\n                if(choice) {\n                    timer.cancel();\n                }\n                returnToMainMenu();\n            }\n            else {\n                feedback.setText(\"\");\n                if(choice) {\n                    timer.cancel();\n                }\n                displayNextQuestion();\n            }\n        });\n\n        // Set the wrong answer buttons\n        for (int i = 1; i <= wrongAnswers.size(); i++) {\n            buttons.get(i).setText(wrongAnswers.get(i-1));\n            buttons.get(i).setOnClickListener(view -> {\n                answered++;\n                if(answered==questions.size()){\n                    if(choice) {\n                        timer.cancel();\n                    }\n                    returnToMainMenu();\n                }\n                else {\n                    feedback.setText(\"Right answer was: \" + correctAnswer);\n                    if(choice) {\n                        timer.cancel();\n                    }\n                    displayNextQuestion();\n                }\n            });\n        }\n        exitButton();\n    }\n    public void returnToMainMenu(){\n        Intent intent = new Intent(QuizActivity.this, new MainActivity().getClass());\n        startActivity(intent);\n        finish();\n    }\n    public void exitButton(){\n        Button btnExit = findViewById(R.id.exit);\n        btnExit.setOnClickListener(view -> {\n            Intent intent = new Intent(QuizActivity.this, new MainActivity().getClass());\n            startActivity(intent);\n            finish();\n        });\n    }\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pokemonquiz/Controller/QuizActivity.java b/app/src/main/java/com/example/pokemonquiz/Controller/QuizActivity.java
--- a/app/src/main/java/com/example/pokemonquiz/Controller/QuizActivity.java	(revision 955b1eb1b67bb2fcd126cab09a427732a01ce8d8)
+++ b/app/src/main/java/com/example/pokemonquiz/Controller/QuizActivity.java	(date 1679918104760)
@@ -51,7 +51,6 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_quiz_activity);
 
-
         pokemonViewModel = ViewModelProviders.of(this).get(PokemonViewModel.class);
         PokemonAdapter adapter = new PokemonAdapter();
 
@@ -74,7 +73,7 @@
                 //    Pokemon p =  pokemonViewModel.getStandardPokemonList().get(0);
 
                 //Shuffle the questions to preserve randomness
-                Collections.shuffle(questions);
+
                 System.out.println("SHUFFLED");
 
 
@@ -87,7 +86,11 @@
                 btn3 = findViewById(R.id.btn3);
 
                 displayNextQuestion();
+
+
             }
+
+
         });
 
     }
Index: app/src/main/java/com/example/pokemonquiz/Controller/AddPokemonActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pokemonquiz.Controller;\n\nimport static android.graphics.Bitmap.createScaledBitmap;\n\nimport androidx.activity.result.ActivityResultLauncher;\nimport androidx.activity.result.contract.ActivityResultContracts;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.lifecycle.ViewModelProviders;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageView;\n\nimport com.example.pokemonquiz.DataAccess.Pokemon;\nimport com.example.pokemonquiz.R;\nimport com.example.pokemonquiz.ViewModel.PokemonViewModel;\n\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\n\npublic class AddPokemonActivity extends AppCompatActivity {\n    Bitmap picture;\n    EditText answerText;\n    private ImageView imageView;\n\n    private PokemonViewModel pokemonViewModel;\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_add_pokemon);\n\n        imageView = findViewById(R.id.image_view);\n\n        Button existingPhotoButton = (Button) findViewById(R.id.existing_photo_button);\n        existingPhotoButton.setOnClickListener(view -> existingPhoto());\n\n        answerText = (EditText) findViewById(R.id.answerEntry);\n\n        Button submit = findViewById(R.id.submit);\n        submit.setOnClickListener(view -> submitEntry());\n        exitButton();\n    }\n\n    public void exitButton() {\n        Button btnExit = findViewById(R.id.exit);\n        btnExit.setOnClickListener(view -> {\n            Intent intent = new Intent(AddPokemonActivity.this, new MainActivity().getClass());\n            startActivity(intent);\n            finish();\n        });\n    }\n\n        ActivityResultLauncher<Intent> getPhoto = registerForActivityResult(\n                new ActivityResultContracts.StartActivityForResult(), result -> {\n                    if (result.getResultCode() == Activity.RESULT_OK) {\n                        Intent data = result.getData();\n\n                        if (data != null && data.getData() != null) {\n                            Uri uri = data.getData();\n                            System.out.println(\"Data got\");\n                            try {\n                                picture = BitmapFactory.decodeStream(\n                                        getContentResolver().openInputStream(uri)\n                                );\n                                imageView.setImageBitmap(picture);\n\n                            } catch (IOException e) {\n                                e.printStackTrace();\n\n                            }\n                        }\n                    }\n                });\n\n\n        private void existingPhoto() {\n            Intent i = new Intent();\n            i.setType(\"image/*\");\n            i.setAction(Intent.ACTION_GET_CONTENT);\n            getPhoto.launch(i);\n        }\n\n\n    void submitEntry() {\n        pokemonViewModel = ViewModelProviders.of(this).get(PokemonViewModel.class);\n        String answer = answerText.getText().toString();\n        System.out.println(\"Added image with answer \" + answer);\n        if (picture != null && !answer.equals(\"\")) {\n            Pokemon pokemon = new Pokemon(answer,createScaledBitmap(picture,1000,1000,true));\n            pokemonViewModel.insertPokemon(pokemon);\n        }\n        finish();\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pokemonquiz/Controller/AddPokemonActivity.java b/app/src/main/java/com/example/pokemonquiz/Controller/AddPokemonActivity.java
--- a/app/src/main/java/com/example/pokemonquiz/Controller/AddPokemonActivity.java	(revision 955b1eb1b67bb2fcd126cab09a427732a01ce8d8)
+++ b/app/src/main/java/com/example/pokemonquiz/Controller/AddPokemonActivity.java	(date 1679917768184)
@@ -29,7 +29,7 @@
     EditText answerText;
     private ImageView imageView;
 
-    private PokemonViewModel pokemonViewModel;
+    public PokemonViewModel pokemonViewModel;
 
 
     @Override
Index: app/src/main/java/com/example/pokemonquiz/Controller/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pokemonquiz.Controller;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.lifecycle.Observer;\nimport androidx.lifecycle.ViewModelProviders;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport com.example.pokemonquiz.DataAccess.Pokemon;\nimport com.example.pokemonquiz.R;\nimport com.example.pokemonquiz.ViewModel.PokemonAdapter;\nimport com.example.pokemonquiz.ViewModel.PokemonViewModel;\n\nimport java.util.List;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private PokemonViewModel pokemonViewModel;\n    public static boolean initialized = false;\n\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        pokemonViewModel = ViewModelProviders.of(this).get(PokemonViewModel.class);\n\n\n         if(pokemonViewModel.getAll() == null) {\n          //  Initialize question list, can be accessed regardless of what activity started first\n           Bitmap q3 = BitmapFactory.decodeResource(getResources(), R.drawable.bulbasaur);\n            Bitmap q2 = BitmapFactory.decodeResource(getResources(), R.drawable.charmander);\n            Bitmap q1 = BitmapFactory.decodeResource(getResources(), R.drawable.marill);\n\n           // pokemonViewModel.deleteAll();\n\n            pokemonViewModel.insertPokemon(new Pokemon(\"Bulbasaur\", Bitmap.createScaledBitmap(q3,1000,1000,true)));\n            pokemonViewModel.insertPokemon(new Pokemon(\"Charmander\",Bitmap.createScaledBitmap(q2,1000,1000,true)));\n            pokemonViewModel.insertPokemon(new Pokemon(\"Marill\",Bitmap.createScaledBitmap(q1,1000,1000,true)));\n\n             initialized = true;\n        }\n\n\n        // Launches the Answers activity\n        Button answersBtn = findViewById(R.id.answersBtn);\n        answersBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(MainActivity.this,AnswerActivity.class);\n                startActivity(intent);\n            }\n        });\n\n        // Launches the AddPokemonActivity activity\n\n        Button addEntryBtn = findViewById(R.id.addEntryBtn);\n        addEntryBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(MainActivity.this,AddPokemonActivity.class);\n                startActivity(intent);\n            }\n        });\n\n        // Launches the Quiz activity\n\n        Button quizBtn = findViewById(R.id.quizBtn);\n        quizBtn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(MainActivity.this,QuizActivity.class);\n                startActivity(intent);\n            }\n        });\n\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.example_menu, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        Intent intentAnswers = new Intent(MainActivity.this, AnswerActivity.class);\n        Intent intentQuiz = new Intent(MainActivity.this, QuizActivity.class);\n        Intent intentMain = new Intent(MainActivity.this, MainActivity.class);\n        Intent intentAdd = new Intent(MainActivity.this, AddPokemonActivity.class);\n        switch (item.getItemId()){\n            case R.id.addQuestions:\n                startActivity(intentAdd);\n                return true;\n            case R.id.showAnswers:\n                startActivity(intentAnswers);\n                return true;\n            case R.id.easyQuiz:\n                intentQuiz.putExtra(\"choice\",false);\n                startActivity(intentQuiz);\n                return true;\n            case R.id.hardQuiz:\n                intentQuiz.putExtra(\"choice\",true);\n                startActivity(intentQuiz);\n\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n\n\n\n\n\n\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pokemonquiz/Controller/MainActivity.java b/app/src/main/java/com/example/pokemonquiz/Controller/MainActivity.java
--- a/app/src/main/java/com/example/pokemonquiz/Controller/MainActivity.java	(revision 955b1eb1b67bb2fcd126cab09a427732a01ce8d8)
+++ b/app/src/main/java/com/example/pokemonquiz/Controller/MainActivity.java	(date 1679917996640)
@@ -38,9 +38,9 @@
         pokemonViewModel = ViewModelProviders.of(this).get(PokemonViewModel.class);
 
 
-         if(pokemonViewModel.getAll() == null) {
+         if(pokemonViewModel.getAll() == null || !initialized) {
           //  Initialize question list, can be accessed regardless of what activity started first
-           Bitmap q3 = BitmapFactory.decodeResource(getResources(), R.drawable.bulbasaur);
+            Bitmap q3 = BitmapFactory.decodeResource(getResources(), R.drawable.bulbasaur);
             Bitmap q2 = BitmapFactory.decodeResource(getResources(), R.drawable.charmander);
             Bitmap q1 = BitmapFactory.decodeResource(getResources(), R.drawable.marill);
 
Index: app/src/main/java/com/example/pokemonquiz/ViewModel/PokemonViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pokemonquiz.ViewModel;\n\nimport android.app.Application;\n\nimport androidx.annotation.NonNull;\nimport androidx.lifecycle.AndroidViewModel;\nimport androidx.lifecycle.LiveData;\nimport com.example.pokemonquiz.DataAccess.Pokemon;\nimport com.example.pokemonquiz.Repo.Repository;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PokemonViewModel extends AndroidViewModel {\n\n    private Repository repository;\n    private LiveData<List<Pokemon>> getAll;\n\n    public PokemonViewModel(@NonNull Application application) {\n        super(application);\n        repository = new Repository(application);\n        getAll = repository.getAll();\n    }\n\n   public LiveData<List<Pokemon>> getAll() {return getAll;}\n\n\n    public void insertPokemon(Pokemon pokemon) {\n        repository.insertPokemon(pokemon);}\n\n    public void deletePokemon(Pokemon pokemon) {repository.deletePokemon(pokemon);}\n\n    public void deleteAll(){repository.deleteAllPokemons();}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pokemonquiz/ViewModel/PokemonViewModel.java b/app/src/main/java/com/example/pokemonquiz/ViewModel/PokemonViewModel.java
--- a/app/src/main/java/com/example/pokemonquiz/ViewModel/PokemonViewModel.java	(revision 955b1eb1b67bb2fcd126cab09a427732a01ce8d8)
+++ b/app/src/main/java/com/example/pokemonquiz/ViewModel/PokemonViewModel.java	(date 1679917768188)
@@ -13,8 +13,8 @@
 
 public class PokemonViewModel extends AndroidViewModel {
 
-    private Repository repository;
-    private LiveData<List<Pokemon>> getAll;
+    public Repository repository;
+    public LiveData<List<Pokemon>> getAll;
 
     public PokemonViewModel(@NonNull Application application) {
         super(application);
Index: app/src/androidTest/java/com/example/pokemonquiz/QuizActivityTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pokemonquiz;\n\nimport static androidx.test.espresso.Espresso.onView;\nimport static androidx.test.espresso.action.ViewActions.click;\nimport static androidx.test.espresso.assertion.ViewAssertions.matches;\nimport static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\nimport static androidx.test.espresso.matcher.ViewMatchers.withId;\nimport static androidx.test.espresso.matcher.ViewMatchers.withSubstring;\nimport static androidx.test.espresso.matcher.ViewMatchers.withText;\n\nimport static org.junit.Assert.assertTrue;\n\nimport android.app.Application;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.widget.Button;\nimport android.widget.ImageView;\n\nimport androidx.annotation.NonNull;\nimport androidx.lifecycle.LifecycleOwner;\nimport androidx.lifecycle.LiveData;\nimport androidx.lifecycle.Observer;\nimport androidx.test.core.app.ActivityScenario;\nimport androidx.test.core.app.ApplicationProvider;\nimport androidx.test.espresso.ViewAction;\nimport androidx.test.espresso.matcher.ViewMatchers;\nimport androidx.test.ext.junit.rules.ActivityScenarioRule;\nimport androidx.test.runner.AndroidJUnit4;\n\nimport com.example.pokemonquiz.Controller.MainActivity;\nimport com.example.pokemonquiz.Controller.QuizActivity;\nimport com.example.pokemonquiz.DataAccess.Pokemon;\nimport com.example.pokemonquiz.DataAccess.PokemonDao;\nimport com.example.pokemonquiz.DataAccess.PokemonDatabase;\nimport com.example.pokemonquiz.ViewModel.PokemonAdapter;\nimport com.example.pokemonquiz.ViewModel.PokemonViewModel;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Logger;\n\n@RunWith(AndroidJUnit4.class)\npublic class QuizActivityTest {\n        private Context context;\n@Rule\npublic ActivityScenarioRule<QuizActivity> QuizActivityRule = new ActivityScenarioRule<>(QuizActivity.class);\n\n        @Test\n        public void testShownPicture(){\n            onView(withId(R.id.imageView)).check(matches(isDisplayed()));\n        }\n\n        @Test\n        public void testButtonOne(){\n            onView(withId(R.id.btn1)).perform(click());\n        }\n        @Test\n        public void testButtonTwo(){\n            onView(withId(R.id.btn2)).perform(click());\n        }\n        @Test\n        public void testButtonThree(){\n            onView(withId(R.id.btn3)).perform(click());\n        }\n\n        @Test\n        public void rightAnswerPressed(){\n\n           QuizActivity quizActivity = new QuizActivity();\n           List<Pokemon> questions = quizActivity.questions;\n           int scoreBefore = quizActivity.score;\n           int questionIndex = quizActivity.answered;\n           String correctAnswer = questions.get(questionIndex).getName();\n           onView(withText(correctAnswer)).perform(click());\n           int scoreAfter = quizActivity.score;\n           Assert.assertTrue(scoreBefore < scoreAfter);\n\n        }\n        @Test\n        public void wrongAnswerPressed(){\n            QuizActivity quizActivity = new QuizActivity();\n\n            List<Pokemon> questions = quizActivity.questions;\n            int scoreBefore = quizActivity.score;\n            int questionIndex = quizActivity.answered;\n            String wrongAnswer = \"\";\n            if(questionIndex > 0) {\n                wrongAnswer = questions.get(questionIndex-1).getName();\n            }\n            if(questionIndex == 0){\n                wrongAnswer = questions.get(1).getName();\n            }\n            onView(withText(wrongAnswer)).perform(click());\n            int scoreAfter = quizActivity.score;\n            Assert.assertTrue(scoreBefore == scoreAfter);\n        }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/pokemonquiz/QuizActivityTest.java b/app/src/androidTest/java/com/example/pokemonquiz/QuizActivityTest.java
--- a/app/src/androidTest/java/com/example/pokemonquiz/QuizActivityTest.java	(revision 955b1eb1b67bb2fcd126cab09a427732a01ce8d8)
+++ b/app/src/androidTest/java/com/example/pokemonquiz/QuizActivityTest.java	(date 1679918247526)
@@ -27,6 +27,7 @@
 import androidx.test.espresso.ViewAction;
 import androidx.test.espresso.matcher.ViewMatchers;
 import androidx.test.ext.junit.rules.ActivityScenarioRule;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.runner.AndroidJUnit4;
 
 import com.example.pokemonquiz.Controller.MainActivity;
@@ -73,8 +74,8 @@
 
         @Test
         public void rightAnswerPressed(){
-
-           QuizActivity quizActivity = new QuizActivity();
+            Intent Quizintent = new Intent(InstrumentationRegistry.getInstrumentation().getTargetContext(), QuizActivity.class);
+        Quizintent.getData().
            List<Pokemon> questions = quizActivity.questions;
            int scoreBefore = quizActivity.score;
            int questionIndex = quizActivity.answered;
Index: app/src/androidTest/java/com/example/pokemonquiz/AddEntryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/pokemonquiz/AddEntryTest.java b/app/src/androidTest/java/com/example/pokemonquiz/AddEntryTest.java
new file mode 100644
--- /dev/null	(date 1679917768191)
+++ b/app/src/androidTest/java/com/example/pokemonquiz/AddEntryTest.java	(date 1679917768191)
@@ -0,0 +1,52 @@
+package com.example.pokemonquiz;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.typeText;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+
+import android.app.Application;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.os.Looper;
+import android.widget.ImageView;
+
+import androidx.test.core.app.ActivityScenario;
+import androidx.test.ext.junit.rules.ActivityScenarioRule;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
+
+import com.example.pokemonquiz.Controller.AddPokemonActivity;
+import com.example.pokemonquiz.Controller.MainActivity;
+import com.example.pokemonquiz.Controller.QuizActivity;
+import com.example.pokemonquiz.DataAccess.PokemonDao;
+import com.example.pokemonquiz.Repo.Repository;
+import com.example.pokemonquiz.ViewModel.PokemonViewModel;
+
+import org.junit.Assert;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import kotlinx.coroutines.GlobalScope;
+
+@RunWith(AndroidJUnit4.class)
+@LargeTest
+public class AddEntryTest {
+    @Rule
+    public ActivityScenarioRule<AddPokemonActivity> addActivityRule = new ActivityScenarioRule<>(AddPokemonActivity.class);
+
+    @Test
+    public void testAddEntry() {
+        AddPokemonActivity addPokemonActivity = new AddPokemonActivity();
+        PokemonViewModel pokemonViewModel = addPokemonActivity.pokemonViewModel;
+        int questions = pokemonViewModel.getAll().getValue().size();
+
+
+        onView(withId(R.id.answerEntry)).perform(typeText("Pikachu"));
+        closeSoftKeyboard();
+        onView(withId(R.id.submit)).perform(click());
+      //  Assert.assertTrue(questions != pokemonViewModel.getAll().getValue().size());
+    }
+}
Index: .idea/androidTestResultsUserPreferences.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AndroidTestResultsUserPreferences\">\n    <option name=\"androidTestResultsTableState\">\n      <map>\n        <entry key=\"-1377933241\">\n          <value>\n            <AndroidTestResultsTableState>\n              <option name=\"preferredColumnWidths\">\n                <map>\n                  <entry key=\"61991585\" value=\"120\" />\n                  <entry key=\"Duration\" value=\"90\" />\n                  <entry key=\"OnePlus&#10; ONEPLUS A6003\" value=\"120\" />\n                  <entry key=\"Tests\" value=\"360\" />\n                </map>\n              </option>\n            </AndroidTestResultsTableState>\n          </value>\n        </entry>\n        <entry key=\"-1085997025\">\n          <value>\n            <AndroidTestResultsTableState>\n              <option name=\"preferredColumnWidths\">\n                <map>\n                  <entry key=\"61991585\" value=\"120\" />\n                  <entry key=\"Duration\" value=\"90\" />\n                  <entry key=\"OnePlus&#10; ONEPLUS A6003\" value=\"120\" />\n                  <entry key=\"Tests\" value=\"360\" />\n                </map>\n              </option>\n            </AndroidTestResultsTableState>\n          </value>\n        </entry>\n        <entry key=\"-358341213\">\n          <value>\n            <AndroidTestResultsTableState>\n              <option name=\"preferredColumnWidths\">\n                <map>\n                  <entry key=\"Duration\" value=\"90\" />\n                  <entry key=\"Tests\" value=\"360\" />\n                  <entry key=\"ce061606a3c14b1003\" value=\"120\" />\n                  <entry key=\"samsung&#10; SM-G930F\" value=\"120\" />\n                </map>\n              </option>\n            </AndroidTestResultsTableState>\n          </value>\n        </entry>\n        <entry key=\"-131635608\">\n          <value>\n            <AndroidTestResultsTableState>\n              <option name=\"preferredColumnWidths\">\n                <map>\n                  <entry key=\"61991585\" value=\"120\" />\n                  <entry key=\"Duration\" value=\"90\" />\n                  <entry key=\"OnePlus&#10; ONEPLUS A6003\" value=\"120\" />\n                  <entry key=\"Tests\" value=\"360\" />\n                </map>\n              </option>\n            </AndroidTestResultsTableState>\n          </value>\n        </entry>\n        <entry key=\"153077134\">\n          <value>\n            <AndroidTestResultsTableState>\n              <option name=\"preferredColumnWidths\">\n                <map>\n                  <entry key=\"61991585\" value=\"120\" />\n                  <entry key=\"Duration\" value=\"90\" />\n                  <entry key=\"OnePlus&#10; ONEPLUS A6003\" value=\"120\" />\n                  <entry key=\"Tests\" value=\"360\" />\n                  <entry key=\"ce061606a3c14b1003\" value=\"120\" />\n                  <entry key=\"samsung\" value=\"120\" />\n                  <entry key=\"samsung&#10; SM-G930F\" value=\"120\" />\n                </map>\n              </option>\n            </AndroidTestResultsTableState>\n          </value>\n        </entry>\n        <entry key=\"1869094281\">\n          <value>\n            <AndroidTestResultsTableState>\n              <option name=\"preferredColumnWidths\">\n                <map>\n                  <entry key=\"Duration\" value=\"90\" />\n                  <entry key=\"Tests\" value=\"360\" />\n                  <entry key=\"ce061606a3c14b1003\" value=\"120\" />\n                  <entry key=\"samsung&#10; SM-G930F\" value=\"120\" />\n                </map>\n              </option>\n            </AndroidTestResultsTableState>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
--- a/.idea/androidTestResultsUserPreferences.xml	(revision 955b1eb1b67bb2fcd126cab09a427732a01ce8d8)
+++ b/.idea/androidTestResultsUserPreferences.xml	(date 1679917768196)
@@ -3,6 +3,20 @@
   <component name="AndroidTestResultsUserPreferences">
     <option name="androidTestResultsTableState">
       <map>
+        <entry key="-1848251646">
+          <value>
+            <AndroidTestResultsTableState>
+              <option name="preferredColumnWidths">
+                <map>
+                  <entry key="61991585" value="120" />
+                  <entry key="Duration" value="90" />
+                  <entry key="OnePlus&#10; ONEPLUS A6003" value="120" />
+                  <entry key="Tests" value="360" />
+                </map>
+              </option>
+            </AndroidTestResultsTableState>
+          </value>
+        </entry>
         <entry key="-1377933241">
           <value>
             <AndroidTestResultsTableState>
@@ -31,6 +45,20 @@
             </AndroidTestResultsTableState>
           </value>
         </entry>
+        <entry key="-946719973">
+          <value>
+            <AndroidTestResultsTableState>
+              <option name="preferredColumnWidths">
+                <map>
+                  <entry key="61991585" value="120" />
+                  <entry key="Duration" value="90" />
+                  <entry key="OnePlus&#10; ONEPLUS A6003" value="120" />
+                  <entry key="Tests" value="360" />
+                </map>
+              </option>
+            </AndroidTestResultsTableState>
+          </value>
+        </entry>
         <entry key="-358341213">
           <value>
             <AndroidTestResultsTableState>
@@ -46,6 +74,20 @@
           </value>
         </entry>
         <entry key="-131635608">
+          <value>
+            <AndroidTestResultsTableState>
+              <option name="preferredColumnWidths">
+                <map>
+                  <entry key="61991585" value="120" />
+                  <entry key="Duration" value="90" />
+                  <entry key="OnePlus&#10; ONEPLUS A6003" value="120" />
+                  <entry key="Tests" value="360" />
+                </map>
+              </option>
+            </AndroidTestResultsTableState>
+          </value>
+        </entry>
+        <entry key="-3199278">
           <value>
             <AndroidTestResultsTableState>
               <option name="preferredColumnWidths">
